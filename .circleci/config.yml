#
# Copyright (C) 2020 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/linux.sh
      - run: bash ./linux.sh && rm ./linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
      - run: bash ./rbe.sh && rm ./rbe.sh          
  run-bazel:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_dependencies//tool/bazelrun:rbe -- << parameters.command >>

jobs:
  build:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/protocol
    steps:
      - checkout
      - install-bazel
      - run-bazel:
          command: bazel build //...
      - run: bazel run @graknlabs_dependencies//tool/unuseddeps:unused-deps -- list

  deploy-maven-snapshot:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/protocol
    steps:
      - install-bazel
      - checkout
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //grpc/java:deploy-maven -- snapshot

  sync-dependencies-snapshot:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/protocol
    steps:
      - checkout
      - install-bazel
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tool/sync:dependencies -- \
          --source protocol@$CIRCLE_SHA1 \
          --targets \
          grakn:master client-java:master client-python:master client-nodejs:master

  release-approval:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/protocol
    steps:
      - install-bazel
      - checkout
      - run: |
          export RELEASE_APPROVAL_USERNAME=$REPO_GITHUB_USERNAME
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tool/release:approval

  deploy-github:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/protocol
    steps:
      - install-bazel
      - checkout
      - run: |
          pip install certifi
          export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tool/release:create-notes -- protocol $(cat VERSION) ./RELEASE_TEMPLATE.md
      - run: |
          export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
          bazel run --define version=$(cat VERSION) //:deploy-github -- $CIRCLE_SHA1

  deploy-maven:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/protocol
    steps:
      - install-bazel
      - checkout
      - run: cat VERSION
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(cat VERSION) //grpc/java:deploy-maven -- release

  sync-dependencies-release:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/protocol
    steps:
      - install-bazel
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tool/sync:dependencies -- \
          --source protocol@$(cat VERSION) \
          --targets \
          grakn:master client-java:master client-python:master client-nodejs:master

  release-cleanup:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/protocol
    steps:
      - checkout
      - run: git push --delete https://$REPO_GITHUB_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME $CIRCLE_BRANCH

workflows:
  protocol:
    jobs:
      - build:
          filters:
            branches:
              ignore: protocol-release-branch
      - deploy-maven-snapshot:
          filters:
            branches:
              only: master
#      - sync-dependencies-snapshot:
#          filters:
#            branches:
#              only: master
#          requires:
#            - build
#            - deploy-maven-snapshot
      - release-approval:
          filters:
            branches:
              only: master
          requires:
#            - sync-dependencies-snapshot
            - build
            - deploy-maven-snapshot


  protocol-release:
    jobs:
      - deploy-github:
          filters:
            branches:
              only: protocol-release-branch
      - deploy-approval:
          type: approval
          filters:
            branches:
              only: protocol-release-branch
          requires:
            - deploy-github
      - deploy-maven:
          filters:
            branches:
              only: protocol-release-branch
          requires:
            - deploy-approval
#      - sync-dependencies-release:
#          filters:
#            branches:
#              only: protocol-release-branch
#          requires:
#            - deploy-maven
      - release-cleanup:
          filters:
            branches:
              only: protocol-release-branch
          requires:
#            - sync-dependencies-release
            - deploy-maven
