//
// Copyright (C) 2021 Grakn Labs
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

syntax = "proto3";

option java_package = "grakn.protocol";
option java_outer_classname = "QueryProto";

import "common/answer.proto";
import "common/logic.proto";
import "common/options.proto";

package grakn.protocol;

message QueryManager {

    message Req {
        Options options = 1;
        oneof req {
            Define.Req define_req = 100;
            Undefine.Req undefine_req = 101;
            Match.Req match_req = 102;
            MatchAggregate.Req match_aggregate_req = 103;
            MatchGroup.Req match_group_req = 104;
            MatchGroupAggregate.Req match_group_aggregate_req = 105;
            Insert.Req insert_req = 106;
            Delete.Req delete_req = 107;
            Update.Req update_req = 108;
            Explain.Req explain_req = 109;
        }
    }

    message Res {
        oneof res {
            Define.Res define_res = 100;
            Undefine.Res undefine_res = 101;
            MatchAggregate.Res match_aggregate_res = 102;
            Delete.Res delete_res = 104;
        }
    }

    message ResPart {
        oneof res {
            Match.ResPart match_res_part = 100;
            MatchGroup.ResPart match_group_res_part = 101;
            MatchGroupAggregate.ResPart match_group_aggregate_res_part = 102;
            Insert.ResPart insert_res_part = 103;
            Update.ResPart update_res_part = 104;
            Explain.ResPart explain_res_part = 105;
        }
    }

    message Match {
        message Req {
            string query = 1;
        }
        message ResPart {
            repeated ConceptMap answers = 1;
        }
    }

    message MatchAggregate {
        message Req {
            string query = 1;
        }

        message Res {
            Numeric answer = 1;
        }
    }

    message MatchGroup {
        message Req {
            string query = 1;
        }

        message ResPart {
            repeated ConceptMapGroup answers = 1;
        }
    }

    message MatchGroupAggregate {
        message Req {
            string query = 1;
        }

        message ResPart {
            repeated NumericGroup answers = 1;
        }
    }

    message Explain {
        message Req {
            int64 explainable_id = 1;
        }

        message ResPart {
            repeated Explanation explanations = 1;
        }
    }

    message Insert {
        message Req {
            string query = 1;
        }
        message ResPart {
            repeated ConceptMap answers = 1;
        }
    }

    message Delete {
        message Req {
            string query = 1;
        }
        message Res {}
    }

    message Update {
        message Req {
            string query = 1;
        }
        message ResPart {
            repeated ConceptMap answers = 1;
        }
    }

    message Define {
        message Req {
            string query = 1;
        }
        message Res {}
    }

    message Undefine {
        message Req {
            string query = 1;
        }
        message Res {}
    }
}
